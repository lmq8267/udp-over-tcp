name: 编译mipsel版

on:
  #schedule:
    #- cron: '0 3,20 * * *'
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      -
        name: 检查更新
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/mullvad/udp-over-tcp/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/lmq8267/tailscale/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      -
        name: 检查代码仓库
        uses: actions/checkout@v3
      - name: Init submodules
        uses: snickerbockers/submodules-init@v4
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: |
           build-cargo-registry-mipsel-unknown-linux-musl
           build-cargo-registry-aarch64-unknown-linux-musl
      - name: List
        run: find ./
      - 
        name: 编译
        run: |
          mkdir -p ./musl_gcc 
          wget -c https://musl.cc/mipsel-linux-musl-cross.tgz -P ./musl_gcc/
          tar zxf ./musl_gcc/mipsel-linux-musl-cross.tgz -C ./musl_gcc/
          sudo ln -s $(pwd)/musl_gcc/mipsel-linux-musl-cross/bin/*gcc /usr/bin/
          rustup target add mipsel-unknown-linux-musl
          wget -c https://musl.cc/aarch64-linux-musl-cross.tgz -P ./musl_gcc/
          tar zxf ./musl_gcc/aarch64-linux-musl-cross.tgz -C ./musl_gcc/
          sudo ln -s $(pwd)/musl_gcc/aarch64-linux-musl-cross/bin/*gcc /usr/bin/
          sudo ln -s $(pwd)/musl_gcc/aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip /opt/striparm
          rustup target add aarch64-unknown-linux-musl
          cat >>~/.cargo/config <<EOF
          [target.mipsel-unknown-linux-musl]
          linker = "mipsel-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static"]
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static"]
          EOF
          git clone https://github.com/mullvad/udp-over-tcp.git /opt/udp
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          tar -xvf /opt/st/upx-4.1.0-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/upx-4.1.0-amd64_linux/upx
          chmod 777 /opt/striparm
          chmod 777 /opt/st/strip
          mkdir -p /opt/tcp
          cd /opt/udp
          echo "tag=$(cat /opt/udp/Cargo.toml | grep 'version =' | awk -F 'version' {'print $2'} | head -n 1 | tr -d '= " ')" >> $GITHUB_ENV
          cargo build --target=mipsel-unknown-linux-musl --release --features env_logger --features clap --bins
          cp -rf /opt/udp/target/mipsel-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp_mipsel
          cp -rf /opt/udp/target/mipsel-unknown-linux-musl/release/tcp2udp /opt/tcp/udp2tcp_mipsel
          cp -rf /opt/udp/target/mipsel-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp.d_mipsel
          cp -rf /opt/udp/target/mipsel-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp.d_mipsel
          cargo clean
          cargo build --target=aarch64-unknown-linux-musl --release --features env_logger --features clap --bins
          cp -rf /opt/udp/target/aarch64-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp_arm64
          cp -rf /opt/udp/target/aarch64-unknown-linux-musl/release/tcp2udp /opt/tcp/udp2tcp_arm64
          cp -rf /opt/udp/target/aarch64-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp.d_arm64
          cp -rf /opt/udp/target/aarch64-unknown-linux-musl/release/tcp2udp /opt/tcp/tcp2udp.d_arm64
           cd /opt/tcp
          /opt/st/strip /opt/tcp/tcp2udp_mipsel
          /opt/st/strip /opt/tcp/udp2tcp_mipsel
          /opt/striparm /opt/tcp/tcp2udp_arm64
          /opt/striparm /opt/tcp/udp2tcp_arm64
          /opt/upx-3.95-amd64_linux/upx --lzma --best tcp2udp_mipsel
          /opt/upx-3.95-amd64_linux/upx --lzma --best udp2tcp_mipsel
          /opt/upx-4.1.0-amd64_linux/upx --lzma --best tcp2udp_arm64
          /opt/upx-4.1.0-amd64_linux/upx --lzma --best udp2tcp_arm64
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - 
        name: 发布
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}

          tag_name: ${{ env.tag }}
          files: |
              /opt/tcp/*
      - 
       name: 删除工作流
       uses: GitRML/delete-workflow-runs@main
       with:
        token: ${{ secrets.c8 }}
        retain_days: 2
        keep_minimum_runs: 0
